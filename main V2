// FCAI – Structured Programming – 2024 - Assignment 3
// Program Name: CS112_A3_Part1_S3,4_20230151_20230215_20230292.cpp

// Program Description: Baby photoshop program that contains 5 filters:
//                      lighten and darken, flip, black and white, invert, rotation

// Last Modification Date: Mar 27 ,2024

// Author1 and ID and Email: Zyad Ashraf El-Sayed   20230151   ziadashraf950@gmail.com
// Author2 and ID and Email: Abd-Elrahman mohamed   20230215   abdelrahmanmohamed191120@gmail.com
// Author3 and ID and Email: Caroline Ayman Isaac   20230292   karolayman551@gmail.com

// Teaching Assistant: Ahmed Fouad Lotfy

// Who did what: Zyad Ashraf El-Sayed : Lighten and darken (filter 7 )
//               Abd-Elrahman mohamed : Black and white , flip (filter 2 , 5)
//               Caroline Ayman Isaac : Invert and rotation, (filter 3 , 6)



#include <iostream>
#include <cmath>
#include "Image_Class.h"
using namespace std;

// Function to convert a color image to darken
void darken(Image& image1){
    // nested loop to iterate over all pixels in the image .
    for (int i = 0; i < image1.width; i++) {
        for (int j = 0; j < image1.height; j++) {
            for (int k = 0; k < 3; k++) {
                // darken each pixel in the photo .
                image1(i,j,k) /= 2;
            }
        }
    }
}

// Function to lighten a color image
void lighten(Image& image1){
    // nested loop to iterate over all pixels in the image .
    for (int i = 0; i < image1.width; i++) {
        for (int j = 0; j < image1.height; j++) {
            for (int k = 0; k < 3; k++) {
                // Increase pixel value by 50%
                unsigned int newPixel = image1(i,j,k) + (0.5 * image1(i,j,k));
                image1(i,j,k) = newPixel;
                if(newPixel > 255){
                    // Ensure pixel value does not exceed 255
                    image1(i,j,k) = 255;
                }
            }
        }
    }
}


// function to invert the colors of an image .
void invertImage (Image & image1){
    // nested loop to iterate over all pixels in the image .
    for (int i = 0; i < image1.width; i++) {
        for (int j = 0; j < image1.height; j++) {
            for (int k = 0; k < image1.channels; k++) {
                // invert each color value in the image.
                image1(i, j, k) = 255-image1(i, j, k);
            }
        }
    }
}


void rotateImage(Image& image1, int angle) {

    // Calculate the number of 90-degree rotations .
    int num_of_Rotation = angle / 90;
    int newWidth, newHeight;

    // Calculate the dimensions of the rotated image1 .
    // if degree = 180 the new dimensions are still the same .
    if (num_of_Rotation % 2 == 0) {
        newWidth = image1.width;
        newHeight = image1.height;
        // if degree = 90 or 270 the new dimensions are swapped .
    } else {
        newWidth = image1.height;
        newHeight = image1.width;
    }
    // Create a new image1 with the rotated dimensions .
    Image rotatedImage(newWidth, newHeight);
    // Iterate over all pixels in the original image1 .
    for (int i = 0; i < image1.width; i++) {
        for (int j = 0; j < image1.height; j++) {
            for (int k = 0; k < image1.channels; k++) {
                int x, y; // set variables for x and y to save the new coordinates .
                // Calculate the new coordinates for the rotated pixel according to the angle.
                if (num_of_Rotation == 1) {
                    x = j;
                    y = newHeight - 1 - i;
                } else if (num_of_Rotation == 2) {
                    x = newWidth - 1 - i;
                    y = newHeight - 1 - j;
                } else {
                    x = newWidth - 1 - j;
                    y = i;
                }
                // Copy the pixel value to the new rotated image1
                rotatedImage(x, y, k) = image1(i, j, k);
            }
        }
    }
    // Update the original image1 with the rotated image1.
    image1 = rotatedImage;
}



void Black_White(Image& image1) {

    // Convert image1 to black and white
    for (int i = 0; i < image1.width; ++i) {
        for (int j = 0; j < image1.height; ++j) {
            // Calculate luminance of each pixel
            int luminance = 0;
            for (int k = 0; k < image1.channels; ++k) {
                luminance += image1(i, j, k);
            }
            luminance /= image1.channels;

            // Set pixel to black or white based on luminance
            for (int k = 0; k < image1.channels; ++k) {
                if (luminance <= 127) {
                    image1(i, j, k) = 0;
                } else {
                    image1(i, j, k) = 255;
                }
            }
        }
    }
}


void horizontal(Image& image1) {

    // Iterate over each row
    for (int j = 0; j < image1.height; ++j) {
        // Iterate over the left half of the width
        for (int i = 0; i < image1.width / 2; ++i) {
            // Swap pixels from left to right
            for (int k = 0; k < image1.channels; ++k) {
                swap(image1(i, j, k), image1(image1.width - 1 - i, j, k));
            }
        }
    }
}


void vertical(Image& image1) {
    // Iterate over each column
    for (int i = 0; i < image1.width; ++i) {
        // Iterate over the top half of the height
        for (int j = 0; j < image1.height / 2; ++j) {
            // Swap pixels from top to bottom
            for (int k = 0; k < image1.channels; ++k) {
                swap(image1(i, j, k), image1(i, image1.height - 1 - j, k));
            }
        }
    }
}




int main() {
    Image image1, image2, image3;
    string filename, option, option3;
    string output;
    int angle;

    cout << "== Welcome to Baby Photoshop program ==" << endl;
    // Load an image .
    while (true) {
        cout << "- Enter the name of the image file "<<endl;
        cin >> filename;
        try {
            if (image1.loadNewImage(filename)) {
                cout << "=========================" << endl;
                cout << "Image loaded successfully." << endl;
                cout << "=========================" << endl;
                break;
            }
        }
        catch (...) {
            continue;
        }
    }

    // Main menu for image processing operations .
    while (true) {
        cout << "Choose what you want to do: " << endl;
        cout << "1) Load New Image" << endl;
        cout << "2) Darken and Lighten" << endl;
        cout << "3) Rotate image" << endl;
        cout << "4) Invert filter" << endl;
        cout << "5) Black and white filter" << endl;
        cout << "6) Flip image" << endl;
        cout << "7) Save image" << endl;
        cout << "8) Exit" << endl;

        cin >> option;

        // Process user choice .
        if (option == "1") {

            // ask the user if he want to save or not .
            while (true) {
                cout << "Save the current image before loading new one?\n1) Save\n2) Don't save";
                cin >> option;
                if (option == "1") {
                    // ask the user about the place of the saved file
                    while(true) {
                        cout << "Choose where to save image:\n1) Save on the same file\n2) Change the file name " << endl;
                        cin >> option3;
                        if(option3 == "1") {
                            // to save on the same file
                            if (image1.saveImage(filename)) {
                                cout << "=========================" << endl;
                                cout << "Image saved successfully." << endl;
                                cout << "=========================" << endl;
                                break;
                            }
                        }

                            // to save at anothor file , we will take file name from thee user .
                        else if(option3 == "2"){
                            while(true) {
                                cout << "Enter the name: " << endl;
                                cin >> output;
                                try {
                                    if (image1.saveImage(output)) {
                                        cout << "=========================" << endl;
                                        cout << "Image saved successfully." << endl;
                                        cout << "=========================" << endl;
                                        break;
                                    }
                                }
                                catch(...) {
                                    continue;
                                }
                            }

                            break;
                        }
                            // to check the validation of the option .
                        else{
                            cout << "Invalid input." << endl;
                            continue;
                        }
                    }
                    break;
                }

                else if (option == "2") {
                    break;
                }
            }
            // loading a new image to work on , take the file name from the user .
            cout << "- Enter the name of the image file you want to work on: ";
            cin >> filename;
            if (image1.loadNewImage(filename)) {
                cout << "=========================" << endl;
                cout << "Image loaded successfully." << endl;
                cout << "=========================" << endl;
                // check the validation of the file .
            } else {
                cout << "Error loading image. Please try again." << endl;
            }
        }
            // Darken or lighten the image , 1 for darken , 2 for lighten.
        else if (option == "2") {
            while (true) {
                cout << "Choose the filter :\n1) Darken\n2) Lighten" << endl;
                cin >> option3;
                if (option3 == "1") {
                    darken(image1);
                    break;
                } else if (option3 == "2") {
                    lighten(image1);
                    break;
                } else {
                    // check the validation of the option .
                    cout << "Invalid choice." << endl;
                    continue;
                }
            }
            continue;
        }

            // Rotate the image taking spicific angle of rotation from the user .
        else if (option == "3") {
            while(true) {
                cout << "Enter the angle of rotation (90, 180, or 270): " << endl;
                cin >> angle;
                // check the validation of the angle  .
                if (angle != 90 && angle != 180 && angle != 270) {
                    cout << "Invalid angle. Please enter 90, 180, or 270." << endl;
                    continue;
                }
                else{
                    break;
                }
            }
            rotateImage(image1, angle);
            cout << "=========================" << endl;
            cout << "Filter Applied successfully!" << endl;
            cout << "=========================" << endl;
            continue;
        }

            // Invert colors of the image .
        else if (option == "4") {
            invertImage(image1);
            cout << "=========================" << endl;
            cout << "Filter Applied successfully!" << endl;
            cout << "=========================" << endl;
            continue;
        }

            // Convert the image to black and white colors
        else if (option == "5") {
            Black_White(image1);
            cout << "=========================" << endl;
            cout << "Filter Applied successfully!" << endl;
            cout << "=========================" << endl;
            continue;
        }

            // Flip the image horizontally or vertically according to user option .
        else if (option == "6") {
            while (true) {
                cout << "Choose :\n1) Horizontal\n2) Vertical" << endl;
                cin >> option3;
                if (option3 == "1") {
                    horizontal(image1);
                    break;
                }
                else if (option3 == "2") {
                    vertical(image1);
                    break;
                }
                    // check the validation of the option .
                else {
                    cout << "Invalid choice." << endl;
                    continue;
                }
            }
            cout << "=========================" << endl;
            cout << "Filter Applied successfully!" << endl;
            cout << "=========================" << endl;
            continue;
        }

            // Save the image
        else if (option == "7") {
            while(true) {
                // ask the user about the place of the saved file .
                cout << "Choose where to save image:\n1) Save on the same file\n2) Change the file name " << endl;
                cin >> option3;
                if(option3 == "1") {
                    // save on the same file .
                    if (image1.saveImage(filename)) {
                        cout << "=========================" << endl;
                        cout << "Image saved successfully." << endl;
                        cout << "=========================" << endl;
                        break;
                    }
                }

                    // save at anothor file taking his name from the user .
                else if(option3 == "2"){
                    while(true) {
                        cout << "Enter the name: " << endl;
                        cin >> output;
                        try {
                            if (image1.saveImage(output)) {
                                cout << "=========================" << endl;
                                cout << "Image saved successfully." << endl;
                                cout << "=========================" << endl;
                                break;
                            }
                        }
                        catch(...) {
                            continue;
                        }
                    }

                    break;
                }
                else{
                    cout << "Invalid input." << endl;
                    continue;
                }
            }
            continue;
        }
            // ask the user if he want to save the current photo befor exit or not .
        else if (option == "8") {
            while(true){
                cout << "Do you want to save the current image? :\n1) Exit without save\n2) Save and exit" << endl;
                cin >> option3;

                // exiting the program without save .
                if (option3 == "1") {
                    return 0;
                }

                    // save the current photo and exit the program .
                else if (option3 == "2") {
                    while(true) {
                        // ask the user if to save on the same file or at anothor file .
                        cout << "Choose where to save image:\n1) Save on the same file\n2) Change the file name " << endl;
                        cin >> option3;
                        // save at the same file .
                        if(option3 == "1") {
                            if (image1.saveImage(filename)) {
                                cout << "=========================" << endl;
                                cout << "Image saved successfully." << endl;
                                cout << "=========================" << endl;
                                break;
                            }
                        }
                            // save on anothor file .
                        else if(option3 == "2"){
                            while(true) {
                                cout << "Enter the name: " << endl;
                                cin >> output;
                                try {
                                    if (image1.saveImage(output)) {
                                        cout << "=========================" << endl;
                                        cout << "Image saved successfully." << endl;
                                        cout << "=========================" << endl;
                                        break;
                                    }
                                }
                                catch(...) {
                                    continue;
                                }
                            }

                            break;
                        }
                            // check the validation of the option .
                        else{
                            cout << "Invalid input." << endl;
                            continue;
                        }
                    }
                    return 0;
                }
            }
        }
            // check the validation of the option .
        else {
            cout << "Invalid option. Please choose again." << endl;
        }
    }
}
